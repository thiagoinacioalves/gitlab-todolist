image: docker:stable

variables:
  DOCKER_HOST: $DOCKER_HOST

stages:
- pre-build
- build
- test
- deploy
- notify

build-docker:
  services:
  - docker:dind 
  retry: 2 
  before_script:
  - docker info
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD


  stage: pre-build
  tags:
  - executor-tarefas
  script:
  - docker build -t alura-gitlab .
  - docker tag alura-gitlab inaciothiago/alura-gitlab:latest
  - docker push inaciothiago/alura-gitlab:latest

build-project:
  image: inaciothiago/alura-gitlab:latest
  retry: 2
  services:
  - docker:dind
  - mysql:5.7

  variables:
    MYSQL_USER: $DB_USER
    MYSQL_PASSWORD: $DB_PASSWORD
    MYSQL_DATABASE: $DB_DATABASE
    MYSQL_ROOT_PASSWORD: $DB_ROOT

    DB_NAME: $DB_DATABASE
    DB_USER: $DB_USER
    DB_PASSWORD: $DB_PASSWORD
    DB_PORT: '3306'
    DB_HOST: 'mysql'
    SECRET_KEY: $DB_SECRET_KEY
    
    DJANGO_SUPERUSER_PASSWORD: mestre123
    DJANGO_SUPERUSER_EMAIL: aluno@alura.com
    DJANGO_SUPERUSER_USERNAME: admin

  stage: build
  tags:
  - executor-tarefas
  dependencies:
  - build-docker
  script:
  - python manage.py makemigrations
  - python manage.py migrate
  - python manage.py createsuperuser --noinput --username $DJANGO_SUPERUSER_USERNAME --email $DJANGO_SUPERUSER_EMAIL

test-project:
  image: inaciothiago/alura-gitlab:latest
  services:
  - docker:dind
  - mysql:5.7
  
  variables:
    MYSQL_USER: $DB_USER
    MYSQL_PASSWORD: $DB_PASSWORD
    MYSQL_DATABASE: $DB_DATABASE
    MYSQL_ROOT_PASSWORD: $DB_ROOT

    DB_NAME: $DB_DATABASE
    DB_USER: $DB_USER
    DB_PASSWORD: $DB_PASSWORD
    DB_PORT: '3306'
    DB_HOST: 'mysql'
    SECRET_KEY: $DB_SECRET_KEY

  stage: test
  dependencies:
  - build-project
  tags:
  - executor-tarefas
  script:
  - python -m unittest setUp

project-deploy:
  stage: deploy
  tags:
  - executor-deploy
  dependencies:
  - test-project
  script:
  - tar cfz arquivos.tgz *
  - scp arquivos.tgz root@192.168.0.91:/srv/gitlab-runner/deploy
  - ssh root@192.168.0.91 'cd /srv/gitlab-runner/deploy/; tar xfz arquivos.tgz; docker-compose up -d' 

notificacao-sucesso:
  stage: notify
  tags:
  - executor-deploy
  when: on_success
  script:
  - sh notificacaoSucesso.sh

notificacao-falhas:
  stage: notify
  tags:
  - executor-deploy
  when: on_failure
  script:
  - sh notificacaoFalha.sh 
